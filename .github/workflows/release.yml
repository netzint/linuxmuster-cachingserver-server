on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  workflow_dispatch:

name: Build Release

jobs:
  deb-package:
    name: build all DEB-Packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt update && sudo apt install debhelper -y

      - name: Build
        run: ./buildpackage.sh

      - name: Copy artifacts
        run: mkdir archives && cp ../*.* ./archives

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: deb-packages
          path: archives/*
        
  github-release:
    needs: deb-package
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    name: GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: deb-packages

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Release Assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: .

  publish_latest_release_to_package_server:
    needs: github-release
    name: Publish latest release to package server
    runs-on: ubuntu-latest
    steps:
      - name: Download assets from latest release
        uses: Itsblue/download-release-assets-action@v4
        with:
          file: ".*"
          path: "."
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy package to package server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REPO_SSH_HOST }}
          username: ${{ secrets.REPO_SSH_USER }}
          key: ${{ secrets.REPO_SSH_KEY }}
          port: 22
          source: "./*"
          target: ${{ secrets.REPO_SSH_INCOMING_PATH }}

      - name: Publish package
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REPO_SSH_HOST }}
          username: ${{ secrets.REPO_SSH_USER }}
          key: ${{ secrets.REPO_SSH_KEY }}
          port: 22
          script: /usr/local/bin/publish-debs lmn7
